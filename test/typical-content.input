function! s:describe__matchers__with_literals()  "{{{1
  It should succeed

  Should 0 != 1
  "Should 0 !~ '1'
  Should 0 < 1
  Should 0 <= 0
  Should 0 <= 1
  Should 0 == 0
  "Should 0 =~ '0'
  Should 0 > -1
  Should 0 >= 0
  Should 0 >= -1
  Should 0 is 0
  Should 0 isnot 1
  Should 0 isnot '0'

  Should 'a' ==# 'a'
  Should 'a' !=# 'A'
  Should 'a' !=# 'B'
  Should 'a' ==? 'A'
  Should 'a' ==? 'A'
  Should 'a' !=? 'B'

  Should [] == []
  Should [] isnot []

  Should {} == {}
  Should {} isnot {}

  Should function('function') == function('function')
  Should function('function') != function('type')

  It should fail

  Should 0 != 0
  Should 0 !~ '0'
  Should 0 < 0
  Should 0 < -1
  Should 0 <= -1
  Should 0 == 1
  Should 0 =~ '1'
  Should 0 > 0
  Should 0 > 1
  Should 0 >= 1
  Should 0 is 1
  Should 0 is '0'
  Should 0 isnot 0

  Should 'a' ==# 'b'
  Should 'a' ==# 'A'
  Should 'a' !=# 'a'
  Should 'a' ==? 'b'
  Should 'a' !=? 'A'
  Should 'a' !=? 'a'

  Should [] == [0]
  Should [] is []

  Should {} == {'0': 0}
  Should {} is {}

  Should function('function') == function('type')
  Should function('function') != function('function')
endfunction




function! s:describe__matchers__with_variables()  "{{{1
  It should succeed

  let s = 'A'
  Should s ==# 'A'
  Should s !=# 'a'

  let l = []
  Should l == []
  Should l is l
endfunction




function! s:describe__matchers__with_wrong_types()  "{{{1
  It should succeed

  Should 0 == 0
  Should 0 != '0'
  Should 0 != []

  It should fail

  Should 0 < '1'
  Should [] < []
  Should {} < {}
  Should function('type') < function('type')

  Should 0 =~ '0'
  Should [] =~ '[]'
  Should {} =~ '{}'
  Should function('type') =~ function('type')
endfunction




" __END__  "{{{1
" vim: filetype=vim foldmethod=marker
