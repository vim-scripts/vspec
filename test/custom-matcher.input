call vspec#hint({'scope': 'vspec#_scope()', 'sid': 'vspec#_sid()'})
function! s:describe__s_valid_matcher_custom_p()  "{{{1
  It should return true for "be"

  Should Call('s:valid_matcher_custom_p', 'be') == !0

  It should return false for other value

  Should Call('s:valid_matcher_custom_p', 'foo') == !!0
  Should Call('s:valid_matcher_custom_p', 'being') == !!0
  Should Call('s:valid_matcher_custom_p', 'describe') == !!0
endfunction




function! s:describe__vspec_customize_matcher()  "{{{1
  function! True(value)
    return type(a:value) == type(0) ? !!(a:value) : !!0
  endfunction
  function! False(value)
    return type(a:value) == type(0) ? !(a:value) : !!0
  endfunction

  It should succeed

  call vspec#customize_matcher('foo', function('True'))
  Should Ref('s:custom_matchers')['foo'] ==# function('True')

  call vspec#customize_matcher('foo', function('False'))
  Should Ref('s:custom_matchers')['foo'] ==# function('False')
endfunction




function! s:describe__Should__with_custom_matcher()  "{{{1
  function! True(value)
    return type(a:value) == type(0) ? !!(a:value) : !!0
  endfunction
  function! False(value)
    return type(a:value) == type(0) ? !(a:value) : !!0
  endfunction

  It should accept custom matcher

  call vspec#customize_matcher('my true', function('True'))
  Should 123 be my true

  call vspec#customize_matcher('my false', function('False'))
  Should 0 be my false

  It sould fail with unknown custom matcher

  let v:errmsg = ''
  silent! call Call('s:matches_p', 'foo', 'be', 'my unknown')
  Should v:errmsg =~# 'Unknown custom matcher'
endfunction




function! s:describe__Should__be_false()  "{{{1
  It should work

  Should vspec#_matcher_false(!!0) == !0
  Should vspec#_matcher_false(123) == !!0

  Should vspec#_matcher_false('') == !!0
  Should vspec#_matcher_false('123') == !!0
  Should vspec#_matcher_false([]) == !!0
  Should vspec#_matcher_false(['123']) == !!0

  Should 0 be false
endfunction




function! s:describe__Should__be_true()  "{{{1
  It should work

  Should vspec#_matcher_true(!0) == !0
  Should vspec#_matcher_true(123) == !0

  Should vspec#_matcher_true(!!0) == !!0
  Should vspec#_matcher_true('') == !!0
  Should vspec#_matcher_true('123') == !!0
  Should vspec#_matcher_true([]) == !!0
  Should vspec#_matcher_true(['123']) == !!0

  Should 1 be true
endfunction




" __END__  "{{{1
" vim: filetype=vim foldmethod=marker
